// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: query.sql

package repository

import (
	"context"
)

const createUser = `-- name: CreateUser :exec
INSERT INTO "user" (id, name, email, role) VALUES ($1, $2, $3, $4)
`

type CreateUserParams struct {
	ID    string
	Name  string
	Email string
	Role  UserRole
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) error {
	_, err := q.db.Exec(ctx, createUser,
		arg.ID,
		arg.Name,
		arg.Email,
		arg.Role,
	)
	return err
}

const getUserByID = `-- name: GetUserByID :one
SELECT id, name, email, phone_number, role, created_at, deleted_at FROM "user" WHERE id = $1
`

func (q *Queries) GetUserByID(ctx context.Context, id string) (User, error) {
	row := q.db.QueryRow(ctx, getUserByID, id)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Email,
		&i.PhoneNumber,
		&i.Role,
		&i.CreatedAt,
		&i.DeletedAt,
	)
	return i, err
}
